Notes:
===============================================================================
Class differences/redundancies:
----------------------------------
This applies mainly to the new, smaller app: LoLTeamCheck

Each class is meant to only work on its own data - i.e. I want to avoid 
importing classes into other classes. 

Current issue: Redundant references
Classes: staticdata.py & rankeddata.py

In order to get ranked data for a champ for a summoner, I could use, in my GUI:

(1)
idnum = GrabStaticSata.get_champid("Jarvan IV")
stats = GrabRankedData.get_stats_by_id(idnum)

OR, 
(2)
in GrabRankedData, I could sort the data from:
stats = api_instance.get_ranked_stats_by_summoner_id(id)


which comes as:
a list in stats['champions'], with stats['champions'][0]['stats'] &
stats['champions'][0]['id']

into:
new_stats['Jarvan IV'] with ['stats'] and ['id'] which means calling:
GrabStaticData.get_champid(name) for each champ

then use GrabRankedData.get_stats_by_name("Jarvan IV")

===============================================================================
Major Stuff:
-------------------
1. Make the model. Currently all important info is being played with inside the
controller.

2. Find a better way to do the imports (redundant imports), and *maybe* 
refactor so that the controller calls the GUI in main.py, not the other way 
around.

3. Find a better way to convert Riot's JSON names to my headers.

4. Sort out the StringVar()/IntVar() issue. Currently all variables are 
StringVar(), but that will be problematic for adding, etc.
===============================================================================
Small QOL Stuff:
-------------------
1. Make sure champion names can be entered into the GUI in a case insensitive
form - i.e.:
(1) convert the static data list stored locally into a list with one case,

and, 
(2) make sure the entry from the GUI gets converted before being checked.

2. Write checks for region (currently LoLTeamCheckerController has "euw" 
hardcoded for its self.api_instance...)

3. Make right, middle, label frames uniform in size (currently don't correspond
to label head sizes).


Misc.:

1. Create all frames [x]
